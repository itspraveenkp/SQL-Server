ISDATE() --  THIS FUNCTION CHECKS IF THE GIVEN VALUES, IS A VALID DATE, TIME OR DATETIME. RETRUN 1 FOR SUCCESS AND 0 FOR FAILURE.

Select ISDATE('PRAGIM') -- returns 0
Select ISDATE(Getdate()) -- returns 1
Select ISDATE('2012-08-31 21:02:04.167') -- returns 1

SELECT DAY(GETDATE())
SELECT MONTH(GETDATE())
SELECT YEAR(GETDATE())

DECLARE @DECLARE DATETIME 
SET @DECLARE = '12/10/2020'
PRINT(@DECLARE)
PRINT(DAY(@DECLARE))
PRINT(MONTH(@DECLARE))
PRINT(YEAR(@DECLARE))



DECLARE @DATENAME DATETIME
SET @DATENAME = '2012-09-30 12:43:46.837'
PRINT(DATENAME(DAY,@DATENAME))
PRINT(DATENAME(MONTH,@DATENAME))
PRINT(DATENAME(YEAR,@DATENAME))

SELECT DATEPART(WEEKDAY,'12/10/1994')
SELECT DATENAME(WEEKDAY,'12/10/1994')
SELECT DATEPART(DAY,'12/15/1994')
SELECT DATENAME(DAY,'12/15/1994')




ALTER FUNCTION FNCOMPUTERAGE(@DOB DATE)
RETURNS NVARCHAR(50)
AS
BEGIN
	DECLARE @TEMPDATE DATETIME, 
			@YEAR INT,
			@MONTH INT,
			@DAYS INT

	SELECT @TEMPDATE = @DOB
	SELECT @YEAR = DATEDIFF(YEAR,@TEMPDATE,GETDATE())
	-CASE WHEN (MONTH(@DOB) > MONTH(GETDATE())) 
		OR (MONTH(@DOB) = MONTH(GETDATE()))
		and(DAY(@DOB) > DAY(GETDATE())) 
		THEN 1 ELSE 0 END
		SELECT @TEMPDATE = DATEADD(YEAR,@YEAR,@TEMPDATE)

	SELECT @MONTH = DATEDIFF(MONTH,@TEMPDATE,GETDATE())
	- CASE WHEN DAY(@DOB) > DAY(GETDATE()) 
		THEN 1 ELSE 0 END
		SELECT @TEMPDATE = DATEADD(MONTH,@MONTH,@TEMPDATE)

	SELECT @DAYS = DATEDIFF(DAY,@TEMPDATE,GETDATE())

	DECLARE @AGE NVARCHAR(50)
	SET @AGE =CAST(@YEAR AS NVARCHAR(4)) + 'YEAR' + CAST(@MONTH AS NVARCHAR(2))+'MONTH'+CAST(@DAYS AS NVARCHAR(2)) +'DAYS OLD'
	RETURN @AGE
END




DECLARE @DOB DATETIME,
		@TEMPDATE DATETIME,
		@YEAR INT,
		@MONTH INT,
		@DAY INT
SET @DOB = '12/10/1994'

SELECT @TEMPDATE = @DOB
